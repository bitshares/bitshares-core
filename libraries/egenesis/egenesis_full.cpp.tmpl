${generated_file_banner}
/*
 * Copyright (c) 2015 Cryptonomex, Inc., and contributors.
 *
 * The MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#include <graphene/protocol/types.hpp>
#include <graphene/egenesis/egenesis.hpp>

namespace graphene { namespace egenesis {

using namespace graphene::chain;

static const char* genesis_json_array[${genesis_json_array_height}] =
{
${genesis_json_array}
};

chain_id_type get_egenesis_chain_id()
{
   return chain_id_type( "${chain_id}" );
}

void compute_egenesis_json( std::string& result )
{
   result.reserve( ${genesis_json_length} );
   result.resize(0);
   for( size_t i=0; i<${genesis_json_array_height}; i++ )
   {
      result.append( genesis_json_array[i] );
   }
}

fc::sha256 get_egenesis_json_hash()
{
   return fc::sha256( "${genesis_json_hash}" );
}

} }
