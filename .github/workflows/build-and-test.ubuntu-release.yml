#
# Copyright 2023 Maxim [maxirmx] Samsonov (https://sw.consulting)
#
# The MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

name: Ubuntu Release
on:
  push:
#    branches: [ main ]
  pull_request:
  workflow_dispatch:

env:
  CCACHE_COMPRESS: exists means true
  CCACHE_SLOPPINESS: include_file_ctime,include_file_mtime,time_macros

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

jobs:
  test-release:
    name: Build and test in Release mode
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    services:
      elasticsearch:
        image: docker://elasticsearch:7.17.7
        options: --env discovery.type=single-node --publish 9200:9200 --publish 9300:9300
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
                     ccache \
                     parallel \
                     libboost-thread-dev \
                     libboost-iostreams-dev \
                     libboost-date-time-dev \
                     libboost-system-dev \
                     libboost-filesystem-dev \
                     libboost-program-options-dev \
                     libboost-chrono-dev \
                     libboost-test-dev \
                     libboost-context-dev \
                     libboost-regex-dev \
                     libboost-coroutine-dev \
                     libcurl4-openssl-dev
        sudo apt-get auto-remove -y
        sudo apt-get clean -y
        df -h
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Configure
      run: |
        cmake -D CMAKE_BUILD_TYPE=Release \
              -D CMAKE_CXX_OUTPUT_EXTENSION_REPLACE=ON \
              -D CMAKE_C_COMPILER=gcc \
              -D CMAKE_C_COMPILER_LAUNCHER=ccache \
              -D CMAKE_CXX_COMPILER=g++ \
              -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -B build
    - name: Load Cache
      uses: actions/cache@v3
      with:
        path: ccache
        key: ccache-release-${{ matrix.os }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ccache-release-${{ matrix.os }}-${{ github.ref }}-
          ccache-release-${{ matrix.os }}-
    - name: Build
      run: |
        export CCACHE_DIR="$GITHUB_WORKSPACE/ccache"
        mkdir -p "$CCACHE_DIR"
        cmake --build build --parallel 2
        df -h
    - name: Unit-Tests
      run: |
        build/tests/app_test -l test_suite
        curl -XPUT -H "Content-Type: application/json" http://localhost:9200/_cluster/settings \
          -d '{ "transient": { "cluster.routing.allocation.disk.threshold_enabled": false } }'
        echo
        build/tests/es_test -l test_suite
        libraries/fc/tests/run-parallel-tests.sh build/tests/chain_test -l test_suite
        build/tests/cli_test -l test_suite
        df -h
    - name: Quick test for program arguments
      run: |
        build/programs/witness_node/witness_node --version
        build/programs/witness_node/witness_node --help
        if build/programs/witness_node/witness_node --bad-arg ; then \
          echo "Fail: did not get expected error."; false; \
        else \
          echo "Pass: got expected error."; \
        fi
        if build/programs/witness_node/witness_node --plugins "account_history elasticsearch" ; then \
          echo "Fail: did not get expected error."; false; \
        else \
          echo "Pass: got expected error."; \
        fi
        if build/programs/witness_node/witness_node --rpc-endpoint --plugins "witness"; then \
          echo "Fail: did not get expected error."; false; \
        else \
          echo "Pass: got expected error."; \
        fi
        build/programs/cli_wallet/cli_wallet --version
        build/programs/cli_wallet/cli_wallet --help
        build/programs/cli_wallet/cli_wallet --suggest-brain-key
        if build/programs/cli_wallet/cli_wallet --bad-arg ; then \
          echo "Fail: did not get expected error."; false; \
        else \
          echo "Pass: got expected error."; \
        fi
    - name: Node-Test
      run: |
        df -h
        pushd build
        ../programs/build_helpers/run-node-test
        df -h
